package gui.myswinggui;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import model.BashOption;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionListener;
import java.util.ResourceBundle;

public class GuiMainFrame extends JFrame {


    private JPanel mainPanel;
    private JButton modeButton;
    private JButton firstPathButton;
    private JButton secondPathButton;
    private JProgressBar progressBar1;
    private JRadioButton versionButton;
    private JRadioButton helpButton;
    private JRadioButton packButton;
    private JRadioButton unpackButton;
    private JTextArea firstPathArea;
    private JTextArea secondPathArea;
    private JButton actionButton;

    /**
     * Constructs a new frame that is initially invisible.
     * <p>
     * This constructor sets the component's locale property to the value
     * returned by <code>JComponent.getDefaultLocale</code>.
     *
     * @throws HeadlessException if GraphicsEnvironment.isHeadless()
     *                           returns true.
     * @see GraphicsEnvironment#isHeadless
     * @see Component#setSize
     * @see Component#setVisible
     * @see JComponent#getDefaultLocale
     */
    public GuiMainFrame() throws HeadlessException {
        setContentPane(mainPanel);
//       add(mainPanel); //constructor's calling for initialization all subcomponents
    }

    public JPanel getMainPanel() {
        return mainPanel;
    }

    public JButton getModeButton() {
        return modeButton;
    }

    public JButton getFirstPathButton() {
        return firstPathButton;
    }

    public JButton getSecondPathButton() {
        return secondPathButton;
    }

    public JProgressBar getProgressBar1() {
        return progressBar1;
    }

    public JRadioButton getVersionButton() {
        return versionButton;
    }

    public JRadioButton getHelpButton() {
        return helpButton;
    }

    public JRadioButton getPackButton() {
        return packButton;
    }

    public JRadioButton getUnpackButton() {
        return unpackButton;
    }

    public JTextArea getFirstPathArea() {
        return firstPathArea;
    }

    public JTextArea getSecondPathArea() {
        return secondPathArea;
    }

    public JButton getActionButton() {
        return actionButton;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridLayoutManager(4, 5, new Insets(0, 0, 0, 0), -1, -1));
        modeButton = new JButton();
        modeButton.setText("modeButton");
        mainPanel.add(modeButton, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        firstPathButton = new JButton();
        firstPathButton.setText("firstPathButton");
        mainPanel.add(firstPathButton, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        secondPathButton = new JButton();
        secondPathButton.setText("secondPathButton");
        mainPanel.add(secondPathButton, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        progressBar1 = new JProgressBar();
        progressBar1.setMinimum(20);
        mainPanel.add(progressBar1, new GridConstraints(3, 1, 1, 4, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        versionButton = new JRadioButton();
        versionButton.setSelected(true);
        versionButton.setText("versionButton");
        mainPanel.add(versionButton, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        helpButton = new JRadioButton();
        helpButton.setText("helpButton");
        mainPanel.add(helpButton, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        packButton = new JRadioButton();
        packButton.setText("packButton");
        mainPanel.add(packButton, new GridConstraints(0, 3, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        unpackButton = new JRadioButton();
        unpackButton.setText("unpackButton");
        mainPanel.add(unpackButton, new GridConstraints(0, 4, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        firstPathArea = new JTextArea();
        Font firstPathAreaFont = this.$$$getFont$$$(null, -1, 16, firstPathArea.getFont());
        if (firstPathAreaFont != null) firstPathArea.setFont(firstPathAreaFont);
        mainPanel.add(firstPathArea, new GridConstraints(1, 1, 1, 4, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 25), null, 0, false));
        secondPathArea = new JTextArea();
        Font secondPathAreaFont = this.$$$getFont$$$(null, -1, 16, secondPathArea.getFont());
        if (secondPathAreaFont != null) secondPathArea.setFont(secondPathAreaFont);
        mainPanel.add(secondPathArea, new GridConstraints(2, 1, 1, 4, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 25), null, 0, false));
        actionButton = new JButton();
        actionButton.setText("actionButton");
        mainPanel.add(actionButton, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        ButtonGroup buttonGroup;
        buttonGroup = new ButtonGroup();
        buttonGroup.add(versionButton);
        buttonGroup.add(helpButton);
        buttonGroup.add(packButton);
        buttonGroup.add(unpackButton);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

}
